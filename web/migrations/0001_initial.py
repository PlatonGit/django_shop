# Generated by Django 3.2 on 2021-04-27 14:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
                ('overall_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Overall price')),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Category name')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone number')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='SmartTV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('diagonal', models.CharField(max_length=250, verbose_name='Screen diagonal')),
                ('resolution', models.CharField(max_length=250, verbose_name='Screen resolution')),
                ('built_in_browser', models.CharField(blank=True, max_length=250, null=True, verbose_name='Built-in web browser')),
                ('built_in_apps', models.CharField(blank=True, max_length=250, null=True, verbose_name='Bulit-in apps')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Smart TV',
                'verbose_name_plural': 'Smart TVs',
            },
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('diagonal', models.CharField(max_length=250, verbose_name='Screen diagonal')),
                ('display_type', models.CharField(max_length=250, verbose_name='Display type')),
                ('resolution', models.CharField(max_length=250, verbose_name='Screen resolution')),
                ('ram', models.CharField(max_length=250, verbose_name='Operative Memory')),
                ('sd', models.BooleanField(default=False, verbose_name='SD card')),
                ('sd_volume', models.CharField(blank=True, max_length=250, null=True, verbose_name='Maximal SD volume')),
                ('battery', models.CharField(max_length=250, verbose_name='Battery life')),
                ('main_cam', models.CharField(max_length=250, verbose_name='Main camera')),
                ('frontal_cam', models.CharField(max_length=250, verbose_name='Frontal camera')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Smartphone',
                'verbose_name_plural': 'Smartphones',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name="Customer's first name")),
                ('last_name', models.CharField(max_length=255, verbose_name="Customer's last name")),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone number')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('status', models.CharField(choices=[('new', 'New'), ('processing', 'Processing'), ('ready', 'Ready'), ('completed', 'Completed')], default='new', max_length=100, verbose_name="Order's status")),
                ('order_type', models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery')], default='pickup', max_length=100, verbose_name="Order's type")),
                ('creation_date', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('delivery_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Delivered at')),
                ('order_comment', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Order comment')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.cart', verbose_name='Cart')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('display_type', models.CharField(max_length=250, verbose_name='Display type')),
                ('processor_freq', models.CharField(max_length=250, verbose_name='Processor frequency')),
                ('diagonal', models.CharField(max_length=250, verbose_name='Screen diagonal')),
                ('video', models.CharField(max_length=250, verbose_name='Video card')),
                ('ram', models.CharField(max_length=250, verbose_name='Random-access memory')),
                ('os', models.CharField(max_length=250, verbose_name='Operating system')),
                ('battery', models.CharField(max_length=250, verbose_name='Battery life')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Notebook',
                'verbose_name_plural': 'Notebooks',
            },
        ),
        migrations.CreateModel(
            name='Headphones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('connection_type', models.CharField(choices=[('wire', 'By wire / MiniJack'), ('wireless', 'Wireless connection / Bluetooth')], default='wire', max_length=100, verbose_name='Headphone connection type')),
                ('fastening', models.CharField(choices=[('earbuds', 'Ear buds'), ('vertical_bow', 'Vertical bow')], default='earbuds', max_length=100, verbose_name='Headphone fastening')),
                ('speaker_freq', models.CharField(max_length=250, verbose_name='Speaker frequency')),
                ('battery', models.CharField(blank=True, max_length=250, null=True, verbose_name='Battery life')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Headphones',
                'verbose_name_plural': 'Headphones',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='orders',
            field=models.ManyToManyField(blank=True, null=True, related_name='orders', to='web.Order', verbose_name="User's orders"),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Final price')),
                ('cart_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.cart', verbose_name='Cart')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Product in cart',
                'verbose_name_plural': 'Products in cart',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='Cart owner'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='products', to='web.CartProduct'),
        ),
    ]
